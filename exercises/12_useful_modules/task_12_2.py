# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона, например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список, где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список IP-адресов и/или диапазонов IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только последний октет адреса.

Функция возвращает список IP-адресов.


Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""
import ipaddress
def convert_ranges_to_ip_list(ip_range):
    list_ip =[]
    for r in ip_range:
        if '-' in r:
            if len(r.split('-')[1].split('.')) < 4:
                ip_start = r.split('-')[0]
                ip_end = ip_start.split('.')[:3]
                ip_end.append(r.split('-')[1])
                ip_end = ".".join(ip_end)

            elif len(r.split('-')[1].split('.')) == 4:
                ip_start = r.split('-')[0]
                ip_end = r.split('-')[1]

            ip_1, ip_2 = ipaddress.ip_address(ip_start) , ipaddress.ip_address(ip_end)
            while ip_1 <= ip_2:
                list_ip.append(str(ip_1))
                ip_1+=1
        else: list_ip.append(r)

    return list_ip
ipr =['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']
if __name__ == "__main__":
    print(convert_ranges_to_ip_list(ipr))
